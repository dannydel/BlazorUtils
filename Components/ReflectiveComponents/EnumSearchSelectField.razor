@inherits BaseEnumField
<MudElement HtmlTag="div">
	<AmresText Typo="AmresTypo.Title12">
		@Label
		@if (Required)
		{
			<span class="mud-error-text"> *</span>
		}
	</AmresText>
	<MudAutocomplete T="DisplayField"
					 SearchFunc="@EnumSearch"
					 @bind-Value="@SelectedValue"
					 ResetValueOnEmptyText="true"
					 ToStringFunc="@(e => e == null ? null : e.Display)"
					 Class="@Class"
					 Style="@Style"
					 Margin="Margin.Dense"
					 Adornment="@Adornment"
					 Format="@Format"
					 MaxItems="Values.Count"
					 Culture="@Culture"
					 AdornmentIcon="@AdornmentIcon"
					 Variant="Variant.Outlined"
					 ReadOnly="@ReadOnly"
					 Required="@Required"
					 RequiredError="@(CommonFunctions.RequiredErrorMessage)"/>
</MudElement>

@code
{
	public readonly DisplayInputType DisplayInputType = DisplayInputType.EnumSearchSelect;

	private async Task<IEnumerable<DisplayField>> EnumSearch(string value)
	{
		await Task.Yield();

		if (string.IsNullOrEmpty(value))
		{
			return Values;
		}

		return Values.Where(x => x.Display.StartsWith(value[0].ToString(), StringComparison.InvariantCultureIgnoreCase) 
		&&  x.Display.Contains(value, StringComparison.InvariantCultureIgnoreCase));
	}
}
